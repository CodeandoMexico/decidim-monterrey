version: '3'
services:
  # ----------------------------------------
  decidim:
    build:
      context: .
      dockerfile: ./docker/decidim.Dockerfile
      args:
        - RAILS_ENV=${RAILS_ENV}
        - SECRET_KEY_BASE=${SECRET_KEY_BASE}
        - FORCE_SSL=${FORCE_SSL}
        - MAILER_SENDER=${MAILER_SENDER}
    ports:
      - '3000:3000'
    env_file:
      - .env
    volumes:
      - gem_cache:/usr/local/bundle/gems
      - node_modules_cache:/decidim/node_modules
      - tmp_cache:/decidim/tmp
      - ./docker/entrypoints:/decidim/docker/entrypoints
      - ~/decidim-storage:/decidim/storage
    entrypoint: docker/entrypoints/decidim.sh
    command: "/decidim/bin/rails s -b 0.0.0.0"
    depends_on:
      redis:
        condition: service_healthy

  # Sidekiq
  sidekiq:
    image: decidim-monterrey_decidim
    command: "bundle exec sidekiq -C config/sidekiq.yml"
    env_file:
      - .env
    depends_on:
      - decidm

  # Sidekiq
  clockwork:
    image: decidim-monterrey_decidim
    command: "bundle exec clockwork config/clockwork.rb"
    depends_on:
      - decidim
  # ------------------------------
  # redis
  redis:
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
  # ----------------------------------------
volumes:
  gem_cache: {}
  node_modules_cache: {}
  tmp_cache: {}
  redis-data: {}
